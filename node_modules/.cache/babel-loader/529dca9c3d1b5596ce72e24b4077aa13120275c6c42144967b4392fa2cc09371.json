{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { db } from './firebase'; // Firebase設定をインポート\nimport { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const roomRef = useRef(null);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const userId = queryParams.get('userId'); // ユーザーIDを取得\n  const userName = queryParams.get('userName'); // ユーザー名を取得\n  const chatRoomId = `${userId}-${queryParams.get('roomId')}`; // 固定のルームIDを生成\n\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        await addDoc(collection(db, 'Chats', chatRoomId, 'Messages'), {\n          userId,\n          userName,\n          text: message,\n          timestamp: new Date()\n        });\n        setMessage(''); // 送信後に入力欄をクリア\n      } catch (error) {\n        console.error(\"メッセージの送信エラー:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    const messagesQuery = query(collection(db, 'Chats', chatRoomId, 'Messages'), orderBy('timestamp', 'asc'));\n\n    // Firestoreでリアルタイムにメッセージを監視\n    const unsubscribe = onSnapshot(messagesQuery, snapshot => {\n      const fetchedMessages = snapshot.docs.map(doc => doc.data());\n      setMessages(fetchedMessages);\n    });\n    return () => unsubscribe(); // コンポーネントのアンマウント時にリスナーを解除\n  }, [chatRoomId]);\n  useEffect(() => {\n    if (roomRef.current) {\n      roomRef.current.scrollTop = roomRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [userName, \"\\u3068\\u306E\\u30C1\\u30E3\\u30C3\\u30C8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"room\",\n      ref: roomRef,\n      style: {\n        height: '300px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.messageBubble,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.userName, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputMessage\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        value: message,\n        onChange: handleInputChange,\n        style: {\n          width: '200px',\n          height: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendBtn\",\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleSendMessage,\n          disabled: message.trim() === '',\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n// メッセージバブルのスタイル\n_s(Chat, \"CM0DhMVQeGJ1Qo1K/fVGm8/+NYA=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nconst styles = {\n  messageBubble: {\n    borderRadius: '15px',\n    backgroundColor: '#f0f0f0',\n    padding: '10px',\n    margin: '5px 0',\n    maxWidth: '300px',\n    wordWrap: 'break-word'\n  }\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","db","collection","addDoc","query","orderBy","onSnapshot","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","roomRef","location","queryParams","URLSearchParams","search","userId","get","userName","chatRoomId","handleInputChange","event","target","value","handleSendMessage","trim","text","timestamp","Date","error","console","messagesQuery","unsubscribe","snapshot","fetchedMessages","docs","map","doc","data","current","scrollTop","scrollHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","style","height","overflowY","border","padding","msg","index","styles","messageBubble","className","type","placeholder","onChange","width","onClick","disabled","_c","borderRadius","backgroundColor","margin","maxWidth","wordWrap","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { db } from './firebase'; // Firebase設定をインポート\nimport { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';\n\nconst Chat = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const roomRef = useRef(null);\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const userId = queryParams.get('userId'); // ユーザーIDを取得\n    const userName = queryParams.get('userName'); // ユーザー名を取得\n    const chatRoomId = `${userId}-${queryParams.get('roomId')}`; // 固定のルームIDを生成\n\n    const handleInputChange = (event) => {\n        setMessage(event.target.value);\n    };\n\n    const handleSendMessage = async () => {\n        if (message.trim() !== '') {\n            try {\n                await addDoc(collection(db, 'Chats', chatRoomId, 'Messages'), {\n                    userId,\n                    userName,\n                    text: message,\n                    timestamp: new Date()\n                });\n                setMessage(''); // 送信後に入力欄をクリア\n            } catch (error) {\n                console.error(\"メッセージの送信エラー:\", error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const messagesQuery = query(\n            collection(db, 'Chats', chatRoomId, 'Messages'),\n            orderBy('timestamp', 'asc')\n        );\n\n        // Firestoreでリアルタイムにメッセージを監視\n        const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\n            const fetchedMessages = snapshot.docs.map(doc => doc.data());\n            setMessages(fetchedMessages);\n        });\n\n        return () => unsubscribe(); // コンポーネントのアンマウント時にリスナーを解除\n    }, [chatRoomId]);\n\n    useEffect(() => {\n        if (roomRef.current) {\n            roomRef.current.scrollTop = roomRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    return (\n        <div>\n            <h3>{userName}とのチャット</h3>\n            <div\n                id=\"room\"\n                ref={roomRef}\n                style={{ height: '300px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}\n            >\n                {/* メッセージを表示 */}\n                {messages.map((msg, index) => (\n                    <div key={index} style={styles.messageBubble}>\n                        <strong>{msg.userName}:</strong> {msg.text}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"input-group chat-input\">\n                <input\n                    id=\"inputMessage\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"メッセージを入力してください\"\n                    value={message}\n                    onChange={handleInputChange}\n                    style={{ width: '200px', height: '40px' }}\n                />\n                <div className=\"input-group-append\">\n                    <button\n                        id=\"sendBtn\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        onClick={handleSendMessage}\n                        disabled={message.trim() === ''}\n                    >\n                        送信\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// メッセージバブルのスタイル\nconst styles = {\n    messageBubble: {\n        borderRadius: '15px',\n        backgroundColor: '#f0f0f0',\n        padding: '10px',\n        margin: '5px 0',\n        maxWidth: '300px',\n        wordWrap: 'break-word',\n    },\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}