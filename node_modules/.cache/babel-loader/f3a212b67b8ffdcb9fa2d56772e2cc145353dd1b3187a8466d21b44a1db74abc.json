{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/MatchedUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs, doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().userName : '不明';\n}\nfunction MatchedUsers({\n  userId\n}) {\n  _s();\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        // マッチ情報を取得\n        const matchQuery = query(collection(db, 'UserMatches'), where('userId', '==', userId));\n        const matchSnapshot = await getDocs(matchQuery);\n\n        // 各マッチユーザーIDに対応する最新のユーザー名を取得\n        const matchData = await Promise.all(matchSnapshot.docs.map(async doc => {\n          const matchInfo = doc.data();\n          const matchedUserName = await getUserName(matchInfo.matchedUserId);\n          return {\n            ...matchInfo,\n            matchedUserName\n          };\n        }));\n        setMatches(matchData);\n      } catch (error) {\n        console.error('マッチングとデータ取得エラー:', error);\n      }\n    };\n    fetchMatches();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30DE\\u30C3\\u30C1\\u3057\\u305F\\u30E6\\u30FC\\u30B6\\u30FC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u30DE\\u30C3\\u30C1\\u30E6\\u30FC\\u30B6\\u30FC\\u540D: \", match.matchedUserName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchedUsers, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n_c = MatchedUsers;\nexport default MatchedUsers;\nvar _c;\n$RefreshReg$(_c, \"MatchedUsers\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","getDocs","doc","getDoc","jsxDEV","_jsxDEV","getUserName","userId","userDoc","exists","data","userName","MatchedUsers","_s","matches","setMatches","fetchMatches","matchQuery","matchSnapshot","matchData","Promise","all","docs","map","matchInfo","matchedUserName","matchedUserId","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","match","index","_c","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/MatchedUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs, doc, getDoc } from 'firebase/firestore';\n\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().userName : '不明';\n}\n\nfunction MatchedUsers({ userId }) {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        // マッチ情報を取得\n        const matchQuery = query(collection(db, 'UserMatches'), where('userId', '==', userId));\n        const matchSnapshot = await getDocs(matchQuery);\n        \n        // 各マッチユーザーIDに対応する最新のユーザー名を取得\n        const matchData = await Promise.all(matchSnapshot.docs.map(async (doc) => {\n          const matchInfo = doc.data();\n          const matchedUserName = await getUserName(matchInfo.matchedUserId);\n          return { ...matchInfo, matchedUserName };\n        }));\n\n        setMatches(matchData);\n      } catch (error) {\n        console.error('マッチングとデータ取得エラー:', error);\n      }\n    };\n\n    fetchMatches();\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>マッチしたユーザー</h2>\n      <ul>\n        {matches.map((match, index) => (\n          <li key={index}>\n            <p>マッチユーザー名: {match.matchedUserName}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MatchedUsers;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpF,eAAeC,WAAWA,CAACC,MAAM,EAAE;EACjC,MAAMC,OAAO,GAAG,MAAML,MAAM,CAACD,GAAG,CAACL,EAAE,EAAE,OAAO,EAAEU,MAAM,CAAC,CAAC;EACtD,OAAOC,OAAO,CAACC,MAAM,CAAC,CAAC,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,QAAQ,GAAG,IAAI;AAC1D;AAEA,SAASC,YAAYA,CAAC;EAAEL;AAAO,CAAC,EAAE;EAAAM,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,UAAU,GAAGlB,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC,EAAEG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEO,MAAM,CAAC,CAAC;QACtF,MAAMW,aAAa,GAAG,MAAMjB,OAAO,CAACgB,UAAU,CAAC;;QAE/C;QACA,MAAME,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,aAAa,CAACI,IAAI,CAACC,GAAG,CAAC,MAAOrB,GAAG,IAAK;UACxE,MAAMsB,SAAS,GAAGtB,GAAG,CAACQ,IAAI,CAAC,CAAC;UAC5B,MAAMe,eAAe,GAAG,MAAMnB,WAAW,CAACkB,SAAS,CAACE,aAAa,CAAC;UAClE,OAAO;YAAE,GAAGF,SAAS;YAAEC;UAAgB,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEHV,UAAU,CAACI,SAAS,CAAC;MACvB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACzC;IACF,CAAC;IAEDX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB5B,OAAA;MAAAwB,QAAA,EACGf,OAAO,CAACS,GAAG,CAAC,CAACW,KAAK,EAAEC,KAAK,kBACxB9B,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAAwB,QAAA,GAAG,oDAAU,EAACK,KAAK,CAACT,eAAe;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADjCE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACpB,EAAA,CAtCQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}