{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/MyQuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { useParams } from 'react-router-dom';\nimport { doc, getDoc, collection, query, where, getDocs, updateDoc, addDoc } from 'firebase/firestore';\nimport { checkMutualLike } from './checkMutualLike'; // 相互「いいね」確認関数をインポート\nimport { saveMatch } from './saveMatch'; // マッチを保存する関数をインポート\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionDetails({\n  userId\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchQuestionAndAnswers = async () => {\n      try {\n        const questionDoc = await getDoc(doc(db, 'Questions', id));\n        if (questionDoc.exists()) {\n          setQuestion({\n            id: questionDoc.id,\n            ...questionDoc.data()\n          });\n        }\n        const answersQuery = query(collection(db, 'Answers'), where('questionId', '==', id));\n        const answersSnapshot = await getDocs(answersQuery);\n        const answersData = answersSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setAnswers(answersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchQuestionAndAnswers();\n  }, [id]);\n  const handleEvaluateAnswer = async (answerId, evaluation) => {\n    try {\n      // Likesコレクションから、この回答に対する評価が既に存在するかを確認\n      const likeQuery = query(collection(db, 'Likes'), where('answerId', '==', answerId), where('fromUserId', '==', userId));\n      const likeSnapshot = await getDocs(likeQuery);\n      if (!likeSnapshot.empty) {\n        console.log(\"既に評価済みです\");\n        return;\n      }\n\n      // Answersコレクション内の評価を更新\n      const answerRef = doc(db, 'Answers', answerId);\n      await updateDoc(answerRef, {\n        evaluation,\n        evaluatedBy: userId\n      });\n      console.log(`評価が保存されました: ${evaluation}, by ${userId}`);\n\n      // Likesコレクションにいいね情報を追加\n      const answerOwnerId = '回答の所有者のID'; // ここに適切な回答の所有者IDを取得するロジックを追加してください\n      await addDoc(collection(db, 'Likes'), {\n        answerId,\n        evaluation,\n        fromUserId: userId,\n        toUserId: answerOwnerId,\n        timestamp: new Date()\n      });\n      console.log(`評価がLikesコレクションに保存されました: ${evaluation}, by ${userId}`);\n\n      // 相互「いいね」を確認して保存\n      const isMutualLike = await checkMutualLike(userId, answerOwnerId);\n      if (isMutualLike) {\n        await saveMatch(userId, answerOwnerId);\n        console.log(`相互「いいね」により、ユーザー ${userId} と ${answerOwnerId} のマッチが保存されました`);\n      }\n\n      // ローカルのanswers stateを更新\n      setAnswers(prevAnswers => {\n        const updatedAnswers = prevAnswers.map(answer => answer.id === answerId ? {\n          ...answer,\n          evaluation,\n          evaluatedBy: userId\n        } : answer);\n        console.log(\"Updated Answers:\", updatedAnswers);\n        return updatedAnswers;\n      });\n    } catch (error) {\n      console.error(\"Error updating evaluation:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u8CEA\\u554F\\u8A73\\u7D30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), question ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u56DE\\u7B54\\u4E00\\u89A7\\u3068\\u8A55\\u4FA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEvaluateAnswer(answer.id, 'like'),\n            children: \"\\u3044\\u3044\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEvaluateAnswer(answer.id, 'nope'),\n            children: \"nope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u8A55\\u4FA1: \", answer.evaluation || '未評価']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u8A55\\u4FA1\\u8005: \", answer.evaluatedBy || '未評価']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), \" \"]\n        }, answer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8CEA\\u554F\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"vKjDmnG6SDOPwtC1OIiCfur7+xo=\", false, function () {\n  return [useParams];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","db","useParams","doc","getDoc","collection","query","where","getDocs","updateDoc","addDoc","checkMutualLike","saveMatch","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionDetails","userId","_s","id","question","setQuestion","answers","setAnswers","loading","setLoading","fetchQuestionAndAnswers","questionDoc","exists","data","answersQuery","answersSnapshot","answersData","docs","map","error","console","handleEvaluateAnswer","answerId","evaluation","likeQuery","likeSnapshot","empty","log","answerRef","evaluatedBy","answerOwnerId","fromUserId","toUserId","timestamp","Date","isMutualLike","prevAnswers","updatedAnswers","answer","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/MyQuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { useParams } from 'react-router-dom';\nimport { doc, getDoc, collection, query, where, getDocs, updateDoc, addDoc } from 'firebase/firestore';\nimport { checkMutualLike } from './checkMutualLike'; // 相互「いいね」確認関数をインポート\nimport { saveMatch } from './saveMatch'; // マッチを保存する関数をインポート\n\nfunction QuestionDetails({ userId }) {\n  const { id } = useParams();\n  const [question, setQuestion] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchQuestionAndAnswers = async () => {\n      try {\n        const questionDoc = await getDoc(doc(db, 'Questions', id));\n        if (questionDoc.exists()) {\n          setQuestion({ id: questionDoc.id, ...questionDoc.data() });\n        }\n\n        const answersQuery = query(collection(db, 'Answers'), where('questionId', '==', id));\n        const answersSnapshot = await getDocs(answersQuery);\n        const answersData = answersSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setAnswers(answersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchQuestionAndAnswers();\n  }, [id]);\n\n  const handleEvaluateAnswer = async (answerId, evaluation) => {\n    try {\n      // Likesコレクションから、この回答に対する評価が既に存在するかを確認\n      const likeQuery = query(\n        collection(db, 'Likes'),\n        where('answerId', '==', answerId),\n        where('fromUserId', '==', userId)\n      );\n      const likeSnapshot = await getDocs(likeQuery);\n\n      if (!likeSnapshot.empty) {\n        console.log(\"既に評価済みです\");\n        return;\n      }\n\n      // Answersコレクション内の評価を更新\n      const answerRef = doc(db, 'Answers', answerId);\n      await updateDoc(answerRef, { evaluation, evaluatedBy: userId });\n      console.log(`評価が保存されました: ${evaluation}, by ${userId}`);\n\n      // Likesコレクションにいいね情報を追加\n      const answerOwnerId = '回答の所有者のID'; // ここに適切な回答の所有者IDを取得するロジックを追加してください\n      await addDoc(collection(db, 'Likes'), {\n        answerId,\n        evaluation,\n        fromUserId: userId,\n        toUserId: answerOwnerId,\n        timestamp: new Date()\n      });\n      console.log(`評価がLikesコレクションに保存されました: ${evaluation}, by ${userId}`);\n\n      // 相互「いいね」を確認して保存\n      const isMutualLike = await checkMutualLike(userId, answerOwnerId);\n      if (isMutualLike) {\n        await saveMatch(userId, answerOwnerId);\n        console.log(`相互「いいね」により、ユーザー ${userId} と ${answerOwnerId} のマッチが保存されました`);\n      }\n\n      // ローカルのanswers stateを更新\n      setAnswers(prevAnswers => {\n        const updatedAnswers = prevAnswers.map(answer =>\n          answer.id === answerId ? { ...answer, evaluation, evaluatedBy: userId } : answer\n        );\n        console.log(\"Updated Answers:\", updatedAnswers);\n        return updatedAnswers;\n      });\n    } catch (error) {\n      console.error(\"Error updating evaluation:\", error);\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <h2>質問詳細</h2>\n      {question ? (\n        <>\n          <h3>{question.question}</h3>\n          <h4>回答一覧と評価</h4>\n          <ul>\n            {answers.map(answer => (\n              <li key={answer.id}>\n                <p>{answer.answer}</p>\n                <button onClick={() => handleEvaluateAnswer(answer.id, 'like')}>\n                  いいね\n                </button>\n                <button onClick={() => handleEvaluateAnswer(answer.id, 'nope')}>\n                  nope\n                </button>\n                <p>評価: {answer.evaluation || '未評価'}</p>\n                <p>評価者: {answer.evaluatedBy || '未評価'}</p> {/* 評価者のIDも表示 */}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>質問が見つかりません</p>\n      )}\n    </div>\n  );\n}\n\nexport default QuestionDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}