{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/ThreeChoiceQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeChoiceQuestion({\n  onAnswerSubmit\n}) {\n  _s();\n  const [question, setQuestion] = useState(null); // ランダムに選んだ1つの質問を保存\n  const [selectedAnswer, setSelectedAnswer] = useState(''); // ユーザーの選択を保存\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const questionsSnapshot = await getDocs(collection(db, 'ThreeChoiceQuestions'));\n        const questionsData = questionsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        // ランダムな質問を選択\n        if (questionsData.length > 0) {\n          const randomQuestion = questionsData[Math.floor(Math.random() * questionsData.length)];\n          setQuestion(randomQuestion);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestion();\n  }, []);\n  const handleAnswerChange = choice => {\n    setSelectedAnswer(choice);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAnswerSubmit({\n      [question.id]: selectedAnswer\n    }); // 親コンポーネントに回答を渡す\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u4FA1\\u5024\\u89B3\\u78BA\\u8A8D - \\u4E09\\u629E\\u8CEA\\u554F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), question ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), (question.choices || []).map(choice =>\n      /*#__PURE__*/\n      // choices が undefined の場合の安全策\n      _jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.id,\n          value: choice,\n          checked: selectedAnswer === choice,\n          onChange: () => handleAnswerChange(choice)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), choice]\n      }, choice, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u56DE\\u7B54\\u3092\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) // 質問がロード中の場合の表示\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ThreeChoiceQuestion, \"2YfkoRyHN6MDtUH05OT5BHLbQoE=\");\n_c = ThreeChoiceQuestion;\nexport default ThreeChoiceQuestion;\nvar _c;\n$RefreshReg$(_c, \"ThreeChoiceQuestion\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","jsxDEV","_jsxDEV","ThreeChoiceQuestion","onAnswerSubmit","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","fetchQuestion","questionsSnapshot","questionsData","docs","map","doc","id","data","length","randomQuestion","Math","floor","random","error","console","handleAnswerChange","choice","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","text","choices","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/ThreeChoiceQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, getDocs } from 'firebase/firestore';\n\nfunction ThreeChoiceQuestion({ onAnswerSubmit }) {\n  const [question, setQuestion] = useState(null); // ランダムに選んだ1つの質問を保存\n  const [selectedAnswer, setSelectedAnswer] = useState(''); // ユーザーの選択を保存\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const questionsSnapshot = await getDocs(collection(db, 'ThreeChoiceQuestions'));\n        const questionsData = questionsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // ランダムな質問を選択\n        if (questionsData.length > 0) {\n          const randomQuestion = questionsData[Math.floor(Math.random() * questionsData.length)];\n          setQuestion(randomQuestion);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestion();\n  }, []);\n\n  const handleAnswerChange = (choice) => {\n    setSelectedAnswer(choice);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAnswerSubmit({ [question.id]: selectedAnswer }); // 親コンポーネントに回答を渡す\n  };\n\n  return (\n    <div>\n      <h2>価値観確認 - 三択質問</h2>\n      {question ? (\n        <form onSubmit={handleSubmit}>\n          <h3>{question.text}</h3>\n          {(question.choices || []).map(choice => ( // choices が undefined の場合の安全策\n            <label key={choice}>\n              <input\n                type=\"radio\"\n                name={question.id}\n                value={choice}\n                checked={selectedAnswer === choice}\n                onChange={() => handleAnswerChange(choice)}\n              />\n              {choice}\n            </label>\n          ))}\n          <button type=\"submit\">回答を送信</button>\n        </form>\n      ) : (\n        <p>Loading question...</p> // 質問がロード中の場合の表示\n      )}\n    </div>\n  );\n}\n\nexport default ThreeChoiceQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}