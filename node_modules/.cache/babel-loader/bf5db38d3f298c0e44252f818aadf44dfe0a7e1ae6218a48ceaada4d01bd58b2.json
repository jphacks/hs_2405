{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, onSnapshot, doc, getDoc } from 'firebase/firestore';\nimport './styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().name : '不明';\n}\nfunction Chat({\n  userId\n}) {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [userNameMap, setUserNameMap] = useState({}); // ユーザーIDと名前の対応を保存する\n\n  useEffect(() => {\n    const messagesQuery = query(collection(db, 'Chats', chatId, 'Messages'));\n    const unsubscribe = onSnapshot(messagesQuery, async snapshot => {\n      const messagesData = await Promise.all(snapshot.docs.map(async doc => {\n        const message = doc.data();\n        // まだ名前がない場合は取得\n        if (!userNameMap[message.userId]) {\n          const name = await getUserName(message.userId);\n          setUserNameMap(prev => ({\n            ...prev,\n            [message.userId]: name\n          }));\n        }\n        return {\n          ...message,\n          userName: userNameMap[message.userId] || message.userId\n        };\n      }));\n      setMessages(messagesData);\n    });\n    return unsubscribe;\n  }, [chatId, userNameMap]);\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      await addDoc(collection(db, 'Chats', chatId, 'Messages'), {\n        userId,\n        text: newMessage,\n        timestamp: new Date()\n      });\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u30EB\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.userId === userId ? 'my-message' : 'other-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.userName || '不明', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message-input\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: sendMessage,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"J/t3xRmEBqEjB1GvJvbg4a58VUQ=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","db","collection","addDoc","query","onSnapshot","doc","getDoc","jsxDEV","_jsxDEV","getUserName","userId","userDoc","exists","data","name","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","userNameMap","setUserNameMap","messagesQuery","unsubscribe","snapshot","messagesData","Promise","all","docs","map","message","prev","userName","sendMessage","trim","text","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, onSnapshot, doc, getDoc } from 'firebase/firestore';\nimport './styles/Chat.css';\n\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().name : '不明';\n}\n\nfunction Chat({ userId }) {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [userNameMap, setUserNameMap] = useState({}); // ユーザーIDと名前の対応を保存する\n\n  useEffect(() => {\n    const messagesQuery = query(collection(db, 'Chats', chatId, 'Messages'));\n\n    const unsubscribe = onSnapshot(messagesQuery, async (snapshot) => {\n      const messagesData = await Promise.all(snapshot.docs.map(async (doc) => {\n        const message = doc.data();\n        // まだ名前がない場合は取得\n        if (!userNameMap[message.userId]) {\n          const name = await getUserName(message.userId);\n          setUserNameMap((prev) => ({ ...prev, [message.userId]: name }));\n        }\n        return { ...message, userName: userNameMap[message.userId] || message.userId };\n      }));\n      setMessages(messagesData);\n    });\n\n    return unsubscribe;\n  }, [chatId, userNameMap]);\n\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      await addDoc(collection(db, 'Chats', chatId, 'Messages'), {\n        userId,\n        text: newMessage,\n        timestamp: new Date(),\n      });\n      setNewMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>チャットルーム</h2>\n      <div className=\"message-list\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${msg.userId === userId ? 'my-message' : 'other-message'}`}\n          >\n            <strong>{msg.userName || '不明'}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          className=\"message-input\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"メッセージを入力...\"\n        />\n        <button className=\"send-button\" onClick={sendMessage}>送信</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}