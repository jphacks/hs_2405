{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/MatchedUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MatchedUsers({\n  userId\n}) {\n  _s();\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      console.log(`Fetching matches for userId: ${userId}`); // userIdの確認\n      try {\n        // UserMatchesコレクションからデータを取得\n        const matchQuery = query(collection(db, 'UserMatches'), where('userId', '==', userId));\n        const matchSnapshot = await getDocs(matchQuery);\n        if (matchSnapshot.empty) {\n          console.log('No matches found for this user.'); // マッチが見つからない場合\n        } else {\n          console.log('Matches found:', matchSnapshot.size); // マッチ数を表示\n        }\n\n        // マッチデータを取得して配列に変換\n        const matchData = matchSnapshot.docs.map(doc => {\n          console.log('Matched User Document:', doc.data()); // 各ドキュメントの内容をログに表示\n          return {\n            id: doc.id,\n            ...doc.data()\n          };\n        });\n        console.log('Fetched match data:', matchData); // 取得した全てのマッチデータを表示\n\n        setMatches(matchData);\n      } catch (error) {\n        console.error('マッチデータの取得エラー:', error); // エラーログ\n      }\n    };\n    fetchMatches(); // データ取得関数を呼び出し\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30DE\\u30C3\\u30C1\\u3057\\u305F\\u30E6\\u30FC\\u30B6\\u30FC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matches.map(match => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u30DE\\u30C3\\u30C1\\u30E6\\u30FC\\u30B6\\u30FCID: \", match.matchedUserId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchedUsers, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n_c = MatchedUsers;\nexport default MatchedUsers;\nvar _c;\n$RefreshReg$(_c, \"MatchedUsers\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","getDocs","jsxDEV","_jsxDEV","MatchedUsers","userId","_s","matches","setMatches","fetchMatches","console","log","matchQuery","matchSnapshot","empty","size","matchData","docs","map","doc","data","id","error","children","fileName","_jsxFileName","lineNumber","columnNumber","match","matchedUserId","_c","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/MatchedUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\n\nfunction MatchedUsers({ userId }) {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      console.log(`Fetching matches for userId: ${userId}`); // userIdの確認\n      try {\n        // UserMatchesコレクションからデータを取得\n        const matchQuery = query(collection(db, 'UserMatches'), where('userId', '==', userId));\n        const matchSnapshot = await getDocs(matchQuery);\n        \n        if (matchSnapshot.empty) {\n          console.log('No matches found for this user.'); // マッチが見つからない場合\n        } else {\n          console.log('Matches found:', matchSnapshot.size); // マッチ数を表示\n        }\n\n        // マッチデータを取得して配列に変換\n        const matchData = matchSnapshot.docs.map(doc => {\n          console.log('Matched User Document:', doc.data()); // 各ドキュメントの内容をログに表示\n          return {\n            id: doc.id,\n            ...doc.data(),\n          };\n        });\n        console.log('Fetched match data:', matchData); // 取得した全てのマッチデータを表示\n\n        setMatches(matchData);\n      } catch (error) {\n        console.error('マッチデータの取得エラー:', error); // エラーログ\n      }\n    };\n\n    fetchMatches(); // データ取得関数を呼び出し\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>マッチしたユーザー</h2>\n      <ul>\n        {matches.map(match => (\n          <li key={match.id}>\n            <p>マッチユーザーID: {match.matchedUserId}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MatchedUsers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BC,OAAO,CAACC,GAAG,CAAC,gCAAgCN,MAAM,EAAE,CAAC,CAAC,CAAC;MACvD,IAAI;QACF;QACA,MAAMO,UAAU,GAAGb,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC,EAAEG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEK,MAAM,CAAC,CAAC;QACtF,MAAMQ,aAAa,GAAG,MAAMZ,OAAO,CAACW,UAAU,CAAC;QAE/C,IAAIC,aAAa,CAACC,KAAK,EAAE;UACvBJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC;QAClD,CAAC,MAAM;UACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,aAAa,CAACE,IAAI,CAAC,CAAC,CAAC;QACrD;;QAEA;QACA,MAAMC,SAAS,GAAGH,aAAa,CAACI,IAAI,CAACC,GAAG,CAACC,GAAG,IAAI;UAC9CT,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEQ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UACnD,OAAO;YACLC,EAAE,EAAEF,GAAG,CAACE,EAAE;YACV,GAAGF,GAAG,CAACC,IAAI,CAAC;UACd,CAAC;QACH,CAAC,CAAC;QACFV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEK,SAAS,CAAC,CAAC,CAAC;;QAE/CR,UAAU,CAACQ,SAAS,CAAC;MACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;MACzC;IACF,CAAC;IAEDb,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAAoB,QAAA,EACGhB,OAAO,CAACW,GAAG,CAACU,KAAK,iBAChBzB,OAAA;QAAAoB,QAAA,eACEpB,OAAA;UAAAoB,QAAA,GAAG,gDAAW,EAACK,KAAK,CAACC,aAAa;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADhCC,KAAK,CAACP,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CAhDQF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}