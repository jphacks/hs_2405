{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, onSnapshot, doc, getDoc, orderBy } from 'firebase/firestore';\nimport './styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().name : '不明';\n}\nfunction Chat({\n  userId\n}) {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [otherUserName, setOtherUserName] = useState(''); // 相手の名前\n  const messageListRef = useRef(null); // Ref for the message list\n\n  useEffect(() => {\n    const fetchOtherUserName = async () => {\n      const chatDoc = await getDoc(doc(db, 'Chats', chatId));\n      if (chatDoc.exists()) {\n        const chatData = chatDoc.data();\n        const otherUserId = chatData.user1 === userId ? chatData.user2 : chatData.user1;\n        const name = await getUserName(otherUserId);\n        setOtherUserName(name);\n      }\n    };\n    fetchOtherUserName();\n  }, [chatId, userId]);\n  useEffect(() => {\n    const messagesQuery = query(collection(db, 'Chats', chatId, 'Messages'), orderBy('timestamp', 'asc'));\n    const unsubscribe = onSnapshot(messagesQuery, snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n    return unsubscribe;\n  }, [chatId]);\n  useEffect(() => {\n    // Scroll to the bottom of the message list whenever messages change\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      await addDoc(collection(db, 'Chats', chatId, 'Messages'), {\n        userId,\n        text: newMessage,\n        timestamp: new Date()\n      });\n      setNewMessage('');\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault(); // Prevent default behavior (like form submission)\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: otherUserName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      ref: messageListRef,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.userId === userId ? 'my-message' : 'other-message'}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message-input\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: handleKeyPress // Listening for Enter key press\n        ,\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: sendMessage,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"st14iu/MrwItZ2LkfANuHydXsvE=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","db","collection","addDoc","query","onSnapshot","doc","getDoc","orderBy","jsxDEV","_jsxDEV","getUserName","userId","userDoc","exists","data","name","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","otherUserName","setOtherUserName","messageListRef","fetchOtherUserName","chatDoc","chatData","otherUserId","user1","user2","messagesQuery","unsubscribe","snapshot","docs","map","current","scrollTop","scrollHeight","sendMessage","trim","text","timestamp","Date","handleKeyPress","event","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","msg","index","value","onChange","e","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, onSnapshot, doc, getDoc, orderBy } from 'firebase/firestore';\nimport './styles/Chat.css';\n\nasync function getUserName(userId) {\n  const userDoc = await getDoc(doc(db, 'users', userId));\n  return userDoc.exists() ? userDoc.data().name : '不明';\n}\n\nfunction Chat({ userId }) {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [otherUserName, setOtherUserName] = useState(''); // 相手の名前\n  const messageListRef = useRef(null); // Ref for the message list\n\n  useEffect(() => {\n    const fetchOtherUserName = async () => {\n      const chatDoc = await getDoc(doc(db, 'Chats', chatId));\n      if (chatDoc.exists()) {\n        const chatData = chatDoc.data();\n        const otherUserId = chatData.user1 === userId ? chatData.user2 : chatData.user1;\n        const name = await getUserName(otherUserId);\n        setOtherUserName(name);\n      }\n    };\n\n    fetchOtherUserName();\n  }, [chatId, userId]);\n\n  useEffect(() => {\n    const messagesQuery = query(\n      collection(db, 'Chats', chatId, 'Messages'),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    return unsubscribe;\n  }, [chatId]);\n\n  useEffect(() => {\n    // Scroll to the bottom of the message list whenever messages change\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (newMessage.trim()) {\n      await addDoc(collection(db, 'Chats', chatId, 'Messages'), {\n        userId,\n        text: newMessage,\n        timestamp: new Date(),\n      });\n      setNewMessage('');\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault(); // Prevent default behavior (like form submission)\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>{otherUserName}</h2> {/* Displaying the other user's name */}\n      <div className=\"message-list\" ref={messageListRef}>\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${msg.userId === userId ? 'my-message' : 'other-message'}`}\n          >\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          className=\"message-input\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          onKeyPress={handleKeyPress} // Listening for Enter key press\n          placeholder=\"メッセージを入力...\"\n        />\n        <button className=\"send-button\" onClick={sendMessage}>送信</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}