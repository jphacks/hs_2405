{"ast":null,"code":"// checkValuesMatch.js\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\nasync function getAnswerForQuestion(userId, questionId) {\n  const q = query(collection(db, 'ThreeChoiceAnswers'), where('userId', '==', userId), where('questionId', '==', questionId));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.empty ? null : querySnapshot.docs[0].data().answer;\n}\nexport async function checkValuesMatch(userAId, userBId) {\n  try {\n    const questions = await getDocs(collection(db, 'ThreeChoiceQuestions'));\n    for (const question of questions.docs) {\n      const questionId = question.id;\n      const answerA = await getAnswerForQuestion(userAId, questionId);\n      const answerB = await getAnswerForQuestion(userBId, questionId);\n      if (answerA === answerB) return true; // 1つでも一致したら true を返す\n    }\n    return false; // すべての質問で不一致だった場合は false\n  } catch (error) {\n    console.error('価値観の一致確認エラー:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["collection","getDocs","query","where","db","getAnswerForQuestion","userId","questionId","q","querySnapshot","empty","docs","data","answer","checkValuesMatch","userAId","userBId","questions","question","id","answerA","answerB","error","console"],"sources":["/Users/shuga/euh/src/checkValuesMatch.js"],"sourcesContent":["// checkValuesMatch.js\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\n\nasync function getAnswerForQuestion(userId, questionId) {\n  const q = query(\n    collection(db, 'ThreeChoiceAnswers'),\n    where('userId', '==', userId),\n    where('questionId', '==', questionId)\n  );\n\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.empty ? null : querySnapshot.docs[0].data().answer;\n}\n\nexport async function checkValuesMatch(userAId, userBId) {\n  try {\n    const questions = await getDocs(collection(db, 'ThreeChoiceQuestions'));\n    for (const question of questions.docs) {\n      const questionId = question.id;\n\n      const answerA = await getAnswerForQuestion(userAId, questionId);\n      const answerB = await getAnswerForQuestion(userBId, questionId);\n\n      if (answerA === answerB) return true; // 1つでも一致したら true を返す\n    }\n    return false; // すべての質問で不一致だった場合は false\n  } catch (error) {\n    console.error('価値観の一致確認エラー:', error);\n    return false;\n  }\n}"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACtE,SAASC,EAAE,QAAQ,YAAY;AAE/B,eAAeC,oBAAoBA,CAACC,MAAM,EAAEC,UAAU,EAAE;EACtD,MAAMC,CAAC,GAAGN,KAAK,CACbF,UAAU,CAACI,EAAE,EAAE,oBAAoB,CAAC,EACpCD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEG,MAAM,CAAC,EAC7BH,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEI,UAAU,CACtC,CAAC;EAED,MAAME,aAAa,GAAG,MAAMR,OAAO,CAACO,CAAC,CAAC;EACtC,OAAOC,aAAa,CAACC,KAAK,GAAG,IAAI,GAAGD,aAAa,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM;AACzE;AAEA,OAAO,eAAeC,gBAAgBA,CAACC,OAAO,EAAEC,OAAO,EAAE;EACvD,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMhB,OAAO,CAACD,UAAU,CAACI,EAAE,EAAE,sBAAsB,CAAC,CAAC;IACvE,KAAK,MAAMc,QAAQ,IAAID,SAAS,CAACN,IAAI,EAAE;MACrC,MAAMJ,UAAU,GAAGW,QAAQ,CAACC,EAAE;MAE9B,MAAMC,OAAO,GAAG,MAAMf,oBAAoB,CAACU,OAAO,EAAER,UAAU,CAAC;MAC/D,MAAMc,OAAO,GAAG,MAAMhB,oBAAoB,CAACW,OAAO,EAAET,UAAU,CAAC;MAE/D,IAAIa,OAAO,KAAKC,OAAO,EAAE,OAAO,IAAI,CAAC,CAAC;IACxC;IACA,OAAO,KAAK,CAAC,CAAC;EAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}