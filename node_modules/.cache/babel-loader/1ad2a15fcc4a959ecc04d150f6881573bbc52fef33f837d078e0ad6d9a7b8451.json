{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/MatchedUsers.js\",\n  _s = $RefreshSig$();\n// LikedUsers.js\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LikedUsers({\n  userId\n}) {\n  _s();\n  const [likedUsers, setLikedUsers] = useState([]);\n  useEffect(() => {\n    const fetchLikedUsers = async () => {\n      console.log(`Fetching users who liked userId: ${userId}`);\n      try {\n        // `toUserId` が `userId` のドキュメント（いいね）を取得\n        const likesQuery = query(collection(db, 'Likes'), where('toUserId', '==', userId));\n        const likesSnapshot = await getDocs(likesQuery);\n\n        // いいねをくれたユーザーのデータをリストに保存\n        const likedUsersData = likesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        console.log('Liked users:', likedUsersData);\n        setLikedUsers(likedUsersData);\n      } catch (error) {\n        console.error('いいねしたユーザーの取得エラー:', error);\n      }\n    };\n    fetchLikedUsers(); // ページにアクセスするたびにいいねしたユーザーを取得\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u3044\\u3044\\u306D\\u3057\\u3066\\u304F\\u308C\\u305F\\u30E6\\u30FC\\u30B6\\u30FC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: likedUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u307E\\u3060\\u3044\\u3044\\u306D\\u3092\\u53D7\\u3051\\u3066\\u3044\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : likedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u3044\\u3044\\u306D\\u30E6\\u30FC\\u30B6\\u30FCID: \", user.fromUserId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(LikedUsers, \"7KAt8mgAtKFKpYc4iK89IqLbkqo=\");\n_c = LikedUsers;\nexport default LikedUsers;\nvar _c;\n$RefreshReg$(_c, \"LikedUsers\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","getDocs","jsxDEV","_jsxDEV","LikedUsers","userId","_s","likedUsers","setLikedUsers","fetchLikedUsers","console","log","likesQuery","likesSnapshot","likedUsersData","docs","map","doc","id","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","user","fromUserId","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/MatchedUsers.js"],"sourcesContent":["// LikedUsers.js\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\n\nfunction LikedUsers({ userId }) {\n  const [likedUsers, setLikedUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchLikedUsers = async () => {\n      console.log(`Fetching users who liked userId: ${userId}`);\n      try {\n        // `toUserId` が `userId` のドキュメント（いいね）を取得\n        const likesQuery = query(\n          collection(db, 'Likes'),\n          where('toUserId', '==', userId)\n        );\n        const likesSnapshot = await getDocs(likesQuery);\n\n        // いいねをくれたユーザーのデータをリストに保存\n        const likedUsersData = likesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        console.log('Liked users:', likedUsersData);\n        setLikedUsers(likedUsersData);\n      } catch (error) {\n        console.error('いいねしたユーザーの取得エラー:', error);\n      }\n    };\n\n    fetchLikedUsers(); // ページにアクセスするたびにいいねしたユーザーを取得\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>いいねしてくれたユーザー</h2>\n      <ul>\n        {likedUsers.length === 0 ? (\n          <p>まだいいねを受けていません</p>\n        ) : (\n          likedUsers.map(user => (\n            <li key={user.id}>\n              <p>いいねユーザーID: {user.fromUserId}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default LikedUsers;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCC,OAAO,CAACC,GAAG,CAAC,oCAAoCN,MAAM,EAAE,CAAC;MACzD,IAAI;QACF;QACA,MAAMO,UAAU,GAAGb,KAAK,CACtBD,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC,EACvBG,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEK,MAAM,CAChC,CAAC;QACD,MAAMQ,aAAa,GAAG,MAAMZ,OAAO,CAACW,UAAU,CAAC;;QAE/C;QACA,MAAME,cAAc,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UACpDC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEHT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,cAAc,CAAC;QAC3CN,aAAa,CAACM,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDX,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,EACGd,UAAU,CAACmB,MAAM,KAAK,CAAC,gBACtBvB,OAAA;QAAAkB,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEpBlB,UAAU,CAACS,GAAG,CAACW,IAAI,iBACjBxB,OAAA;QAAAkB,QAAA,eACElB,OAAA;UAAAkB,QAAA,GAAG,gDAAW,EAACM,IAAI,CAACC,UAAU;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD5BE,IAAI,CAACT,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CA9CQF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAgDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}