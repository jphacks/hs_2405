{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/Question.js\",\n  _s = $RefreshSig$();\nimport { db } from './firebase';\nimport { useState } from 'react';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postQuestion(userId, questionText) {\n  try {\n    await addDoc(collection(db, 'Questions'), {\n      question: questionText,\n      userId: userId,\n      createdAt: new Date()\n    });\n    console.log('質問が投稿されました');\n  } catch (error) {\n    console.error('エラー発生:', error);\n  }\n}\nfunction Question({\n  userId\n}) {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await postQuestion(userId, questionText);\n    setQuestionText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"input your question\",\n        value: questionText,\n        onChange: e => setQuestionText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"knMhjdmnwCScssP/Z/qAsDgA55A=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["db","useState","collection","addDoc","jsxDEV","_jsxDEV","postQuestion","userId","questionText","question","createdAt","Date","console","log","error","Question","_s","setQuestionText","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/Question.js"],"sourcesContent":["import {db} from './firebase';\nimport {useState} from 'react';\nimport {collection, addDoc} from 'firebase/firestore';\n\nasync function postQuestion(userId, questionText) {\n    try {\n        await addDoc(collection(db, 'Questions'), {\n            question: questionText,\n            userId: userId,\n            createdAt: new Date(),\n        });\n        console.log('質問が投稿されました');\n    } catch (error) {\n        console.error('エラー発生:', error);\n    }\n}\n\nfunction Question({ userId }) {\n  const [questionText, setQuestionText] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await postQuestion(userId, questionText);\n    setQuestionText('');\n  };\n\n  return (\n    <div>\n      <h2>Question</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          type=\"text\"\n          placeholder=\"input your question\"\n          value={questionText}\n          onChange={(e) => setQuestionText(e.target.value)}\n          required\n        />\n        <button type=\"submit\">post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Question;\n\n"],"mappings":";;AAAA,SAAQA,EAAE,QAAO,YAAY;AAC7B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,UAAU,EAAEC,MAAM,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAeC,YAAYA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAC9C,IAAI;IACA,MAAML,MAAM,CAACD,UAAU,CAACF,EAAE,EAAE,WAAW,CAAC,EAAE;MACtCS,QAAQ,EAAED,YAAY;MACtBD,MAAM,EAAEA,MAAM;MACdG,SAAS,EAAE,IAAIC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ;AAEA,SAASC,QAAQA,CAAC;EAAER;AAAO,CAAC,EAAE;EAAAS,EAAA;EAC5B,MAAM,CAACR,YAAY,EAAES,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMd,YAAY,CAACC,MAAM,EAAEC,YAAY,CAAC;IACxCS,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAMqB,QAAQ,EAAER,YAAa;MAAAG,QAAA,gBAC3BhB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAErB,YAAa;QACpBsB,QAAQ,EAAGX,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QACjDG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACT,EAAA,CAxBQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}