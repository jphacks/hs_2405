{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/Question.js\",\n  _s = $RefreshSig$();\nimport { db } from './firebase';\nimport { useState } from 'react';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postQuestion(userId, questionText) {\n  try {\n    await addDoc(collection(db, 'Questions'), {\n      question: questionText,\n      userId: userId,\n      createdAt: new Date()\n    });\n    console.log('質問が投稿されました');\n  } catch (error) {\n    console.error('エラー発生:', error);\n  }\n}\nfunction Question({\n  userId\n}) {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const [message, setMessage] = useState(''); // 成功メッセージの新しいステート\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await postQuestion(userId, questionText);\n    setQuestionText('');\n    setMessage('質問が投稿されました'); // 成功メッセージを設定\n    setTimeout(() => setMessage(''), 3000); // 3秒後にメッセージをクリア\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u8CEA\\u554F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"\\u8CEA\\u554F\\u3092\\u5165\\u529B\",\n        value: questionText,\n        onChange: e => setQuestionText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"vJxAnuTrKPpjGB94NsyA//XeHDo=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["db","useState","collection","addDoc","jsxDEV","_jsxDEV","postQuestion","userId","questionText","question","createdAt","Date","console","log","error","Question","_s","setQuestionText","message","setMessage","handleSubmit","e","preventDefault","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/Question.js"],"sourcesContent":["import { db } from './firebase';\nimport { useState } from 'react';\nimport { collection, addDoc } from 'firebase/firestore';\n\nasync function postQuestion(userId, questionText) {\n    try {\n        await addDoc(collection(db, 'Questions'), {\n            question: questionText,\n            userId: userId,\n            createdAt: new Date(),\n        });\n        console.log('質問が投稿されました');\n    } catch (error) {\n        console.error('エラー発生:', error);\n    }\n}\n\nfunction Question({ userId }) {\n  const [questionText, setQuestionText] = useState('');\n  const [message, setMessage] = useState(''); // 成功メッセージの新しいステート\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await postQuestion(userId, questionText);\n    setQuestionText('');\n    setMessage('質問が投稿されました'); // 成功メッセージを設定\n    setTimeout(() => setMessage(''), 3000); // 3秒後にメッセージをクリア\n  };\n\n  return (\n    <div>\n      <h2>質問</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          type=\"text\"\n          placeholder=\"質問を入力\"\n          value={questionText}\n          onChange={(e) => setQuestionText(e.target.value)}\n          required\n        />\n        <button type=\"submit\">投稿</button>\n      </form>\n      {message && <p>{message}</p>} {/* 成功メッセージを表示 */}\n    </div>\n  );\n}\n\nexport default Question;"],"mappings":";;AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAeC,YAAYA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAC9C,IAAI;IACA,MAAML,MAAM,CAACD,UAAU,CAACF,EAAE,EAAE,WAAW,CAAC,EAAE;MACtCS,QAAQ,EAAED,YAAY;MACtBD,MAAM,EAAEA,MAAM;MACdG,SAAS,EAAE,IAAIC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ;AAEA,SAASC,QAAQA,CAAC;EAAER;AAAO,CAAC,EAAE;EAAAS,EAAA;EAC5B,MAAM,CAACR,YAAY,EAAES,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMhB,YAAY,CAACC,MAAM,EAAEC,YAAY,CAAC;IACxCS,eAAe,CAAC,EAAE,CAAC;IACnBE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1BI,UAAU,CAAC,MAAMJ,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEd,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXvB,OAAA;MAAMwB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BnB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gCAAO;QACnBC,KAAK,EAAExB,YAAa;QACpByB,QAAQ,EAAGZ,CAAC,IAAKJ,eAAe,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QACjDG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACNV,OAAO,iBAAIb,OAAA;MAAAmB,QAAA,EAAIN;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACZ,EAAA,CA5BQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}