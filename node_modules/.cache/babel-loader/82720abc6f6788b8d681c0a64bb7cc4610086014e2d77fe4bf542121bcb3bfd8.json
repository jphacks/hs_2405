{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/Answer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postAnswer(questionId, userId, answerText) {\n  try {\n    await addDoc(collection(db, 'answers'), {\n      questionId: questionId,\n      userId: userId,\n      aswer: answerText,\n      createdAt: new Date()\n    });\n    console.log('回答が投稿されました');\n  } catch (error) {\n    console.error('エラー発生:', error);\n  }\n}\nfunction Answer({\n  questionId,\n  userId\n}) {\n  _s();\n  const [answerText, setAnswerText] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await postAnswer(questionId, userId, answerText);\n    setAnswerText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"input your answer\",\n        value: answerText,\n        onChange: e => setAnswerText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(Answer, \"7b22QkByWPztce8PPxLzJ/u7zLU=\");\n_c = Answer;\nexport default Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","jsxDEV","_jsxDEV","postAnswer","questionId","userId","answerText","aswer","createdAt","Date","console","log","error","Answer","_s","setAnswerText","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/Answer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc} from 'firebase/firestore';\n\nasync function postAnswer(questionId, userId, answerText) {\n    try {\n        await addDoc(collection(db, 'answers'), {\n            questionId: questionId,  \n            userId: userId,\n            aswer: answerText,\n            createdAt: new Date(),\n        });\n        console.log('回答が投稿されました');\n    } catch (error) {\n        console.error('エラー発生:', error);\n    }\n}\n\nfunction Answer({ questionId, userId }) {\n    const [answerText, setAnswerText] = useState('');\n    \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      await postAnswer(questionId, userId, answerText);\n      setAnswerText('');\n  };\n\n  return (\n      <div>\n        <h2>Answer</h2>\n        <form onSubmit={handleSubmit}>\n          <textarea\n              placeholder=\"input your answer\"\n              value={answerText}\n              onChange={(e) => setAnswerText(e.target.value)}\n              required\n          />  \n          <button type=\"submit\">post</button>\n        </form>\n      </div>\n  );\n}\n\nexport default Answer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,MAAM,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAeC,UAAUA,CAACC,UAAU,EAAEC,MAAM,EAAEC,UAAU,EAAE;EACtD,IAAI;IACA,MAAMN,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,SAAS,CAAC,EAAE;MACpCM,UAAU,EAAEA,UAAU;MACtBC,MAAM,EAAEA,MAAM;MACdE,KAAK,EAAED,UAAU;MACjBE,SAAS,EAAE,IAAIC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ;AAEA,SAASC,MAAMA,CAAC;EAAET,UAAU;EAAEC;AAAO,CAAC,EAAE;EAAAS,EAAA;EACpC,MAAM,CAACR,UAAU,EAAES,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMf,UAAU,CAACC,UAAU,EAAEC,MAAM,EAAEC,UAAU,CAAC;IAChDS,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACIb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfrB,OAAA;MAAMsB,QAAQ,EAAER,YAAa;MAAAG,QAAA,gBAC3BjB,OAAA;QACIuB,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAEpB,UAAW;QAClBqB,QAAQ,EAAGV,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;QAC/CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFrB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAACT,EAAA,CAvBQD,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAyBf,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}