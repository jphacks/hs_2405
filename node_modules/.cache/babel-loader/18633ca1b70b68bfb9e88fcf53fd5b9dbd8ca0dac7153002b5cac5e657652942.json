{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/euh/src/Question.js\",\n  _s = $RefreshSig$();\nimport { db } from './firebase';\nimport { useState, useEffect } from 'react';\nimport { collection, addDoc, query, where, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postQuestion(userId, questionText) {\n  if (!userId) {\n    console.warn(\"userId is undefined or null. Aborting postQuestion.\");\n    return; // userIdが無効な場合、処理を中断\n  }\n  try {\n    console.log(\"Attempting to post a question with userId:\", userId);\n    await addDoc(collection(db, 'Questions'), {\n      question: questionText,\n      userId: userId,\n      createdAt: new Date()\n    });\n    console.log('質問が投稿されました');\n  } catch (error) {\n    console.error('エラー発生 during posting question:', error);\n  }\n}\nfunction Question({\n  userId\n}) {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const [message, setMessage] = useState('');\n  const [pastQuestions, setPastQuestions] = useState([]);\n  const fetchPastQuestions = async () => {\n    if (!userId) {\n      console.warn(\"Invalid userId:\", userId);\n      return;\n    }\n    try {\n      const q = query(collection(db, 'Questions'), where('userId', '==', userId));\n      const querySnapshot = await getDocs(q);\n      const questions = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPastQuestions(questions);\n    } catch (error) {\n      console.error('エラー発生 during fetching past questions:', error);\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      fetchPastQuestions();\n    } else {\n      console.warn(\"userId is not defined yet.\");\n    }\n  }, [userId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      console.warn(\"userId is undefined or null. Aborting postQuestion.\");\n      return;\n    }\n    await postQuestion(userId, questionText);\n    setQuestionText('');\n    setMessage('質問が投稿されました');\n    await fetchPastQuestions();\n    setTimeout(() => setMessage(''), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u8CEA\\u554F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"\\u8CEA\\u554F\\u3092\\u5165\\u529B\",\n        value: questionText,\n        onChange: e => setQuestionText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u904E\\u53BB\\u306E\\u8CEA\\u554F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question.question\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Question, \"eJB4C4qFC20OMy+OCSuAdXppVx8=\");\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["db","useState","useEffect","collection","addDoc","query","where","getDocs","jsxDEV","_jsxDEV","postQuestion","userId","questionText","console","warn","log","question","createdAt","Date","error","Question","_s","setQuestionText","message","setMessage","pastQuestions","setPastQuestions","fetchPastQuestions","q","querySnapshot","questions","docs","map","doc","id","data","handleSubmit","e","preventDefault","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/shuga/euh/src/Question.js"],"sourcesContent":["import { db } from './firebase';\nimport { useState, useEffect } from 'react';\nimport { collection, addDoc, query, where, getDocs } from 'firebase/firestore';\n\nasync function postQuestion(userId, questionText) {\n    if (!userId) {\n        console.warn(\"userId is undefined or null. Aborting postQuestion.\");\n        return; // userIdが無効な場合、処理を中断\n    }\n\n    try {\n        console.log(\"Attempting to post a question with userId:\", userId);\n        await addDoc(collection(db, 'Questions'), {\n            question: questionText,\n            userId: userId,\n            createdAt: new Date(),\n        });\n        console.log('質問が投稿されました');\n    } catch (error) {\n        console.error('エラー発生 during posting question:', error);\n    }\n}\n\nfunction Question({ userId }) {\n    const [questionText, setQuestionText] = useState('');\n    const [message, setMessage] = useState('');\n    const [pastQuestions, setPastQuestions] = useState([]);\n\n    const fetchPastQuestions = async () => {\n        if (!userId) {\n            console.warn(\"Invalid userId:\", userId);\n            return;\n        }\n        try {\n            const q = query(collection(db, 'Questions'), where('userId', '==', userId));\n            const querySnapshot = await getDocs(q);\n            const questions = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setPastQuestions(questions);\n        } catch (error) {\n            console.error('エラー発生 during fetching past questions:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (userId) {\n            fetchPastQuestions();\n        } else {\n            console.warn(\"userId is not defined yet.\");\n        }\n    }, [userId]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!userId) {\n            console.warn(\"userId is undefined or null. Aborting postQuestion.\");\n            return;\n        }\n        await postQuestion(userId, questionText);\n        setQuestionText('');\n        setMessage('質問が投稿されました');\n        await fetchPastQuestions();\n        setTimeout(() => setMessage(''), 3000);\n    };\n\n    return (\n        <div>\n            <h2>質問</h2>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    type=\"text\"\n                    placeholder=\"質問を入力\"\n                    value={questionText}\n                    onChange={(e) => setQuestionText(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">投稿</button>\n            </form>\n            {message && <p>{message}</p>}\n            <h3>過去の質問</h3>\n            <ul>\n                {pastQuestions.map(question => (\n                    <li key={question.id}>{question.question}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}