{"ast":null,"code":"var _jsxFileName = \"/Users/shuga/hs_2405/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, orderBy, onSnapshot, doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [partnerName, setPartnerName] = useState('');\n  const roomRef = useRef(null);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const userId = queryParams.get('userId');\n  const userName = queryParams.get('userName');\n  const partnerId = queryParams.get('roomId'); // チャット相手のIDとしてroomIdを利用\n  const chatRoomId = [userId, partnerId].sort().join('-'); // 一意のチャットルームIDを生成\n\n  // 入力欄の更新\n  const handleInputChange = event => setMessage(event.target.value);\n\n  // メッセージの送信\n  const handleSendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        await addDoc(collection(db, 'Chats', chatRoomId, 'Messages'), {\n          userId,\n          userName,\n          text: message,\n          timestamp: new Date()\n        });\n        setMessage(''); // 送信後に入力欄をクリア\n      } catch (error) {\n        console.error(\"メッセージの送信エラー:\", error);\n      }\n    }\n  };\n\n  // チャット相手の名前を取得\n  useEffect(() => {\n    const fetchPartnerName = async () => {\n      try {\n        const partnerDoc = await getDoc(doc(db, 'users', partnerId));\n        if (partnerDoc.exists()) {\n          setPartnerName(partnerDoc.data().name);\n        } else {\n          setPartnerName('不明なユーザー');\n        }\n      } catch (error) {\n        console.error(\"チャット相手の名前取得エラー:\", error);\n        setPartnerName('不明なユーザー');\n      }\n    };\n    fetchPartnerName();\n  }, [partnerId]);\n\n  // メッセージをリアルタイムで取得\n  useEffect(() => {\n    const messagesQuery = query(collection(db, 'Chats', chatRoomId, 'Messages'), orderBy('timestamp', 'asc'));\n    const unsubscribe = onSnapshot(messagesQuery, snapshot => {\n      const fetchedMessages = snapshot.docs.map(doc => doc.data());\n      setMessages(fetchedMessages);\n    });\n    return () => unsubscribe();\n  }, [chatRoomId]);\n  useEffect(() => {\n    if (roomRef.current) {\n      roomRef.current.scrollTop = roomRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [partnerName, \"\\u3068\\u306E\\u30C1\\u30E3\\u30C3\\u30C8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"room\",\n      ref: roomRef,\n      style: {\n        height: '300px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.messageBubble,\n          backgroundColor: msg.userId === userId ? '#daf5da' : '#f0f0f0',\n          // 自分と相手で背景色を変える\n          alignSelf: msg.userId === userId ? 'flex-end' : 'flex-start' // 自分のメッセージは右寄せ\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.userName, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputMessage\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        value: message,\n        onChange: handleInputChange,\n        style: {\n          width: '200px',\n          height: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendBtn\",\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleSendMessage,\n          disabled: message.trim() === '',\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"b3YUJBylZvuJHNLsPQFXF6/AGTA=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nconst styles = {\n  messageBubble: {\n    borderRadius: '15px',\n    padding: '10px',\n    margin: '5px 0',\n    maxWidth: '300px',\n    wordWrap: 'break-word'\n  }\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","db","collection","addDoc","query","orderBy","onSnapshot","doc","getDoc","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","partnerName","setPartnerName","roomRef","location","queryParams","URLSearchParams","search","userId","get","userName","partnerId","chatRoomId","sort","join","handleInputChange","event","target","value","handleSendMessage","trim","text","timestamp","Date","error","console","fetchPartnerName","partnerDoc","exists","data","name","messagesQuery","unsubscribe","snapshot","fetchedMessages","docs","map","current","scrollTop","scrollHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","style","height","overflowY","border","padding","msg","index","styles","messageBubble","backgroundColor","alignSelf","className","type","placeholder","onChange","width","onClick","disabled","_c","borderRadius","margin","maxWidth","wordWrap","$RefreshReg$"],"sources":["/Users/shuga/hs_2405/src/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, addDoc, query, orderBy, onSnapshot, doc, getDoc } from 'firebase/firestore';\n\nconst Chat = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [partnerName, setPartnerName] = useState('');\n    const roomRef = useRef(null);\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const userId = queryParams.get('userId');\n    const userName = queryParams.get('userName');\n    const partnerId = queryParams.get('roomId'); // チャット相手のIDとしてroomIdを利用\n    const chatRoomId = [userId, partnerId].sort().join('-'); // 一意のチャットルームIDを生成\n\n    // 入力欄の更新\n    const handleInputChange = (event) => setMessage(event.target.value);\n\n    // メッセージの送信\n    const handleSendMessage = async () => {\n        if (message.trim() !== '') {\n            try {\n                await addDoc(collection(db, 'Chats', chatRoomId, 'Messages'), {\n                    userId,\n                    userName,\n                    text: message,\n                    timestamp: new Date(),\n                });\n                setMessage(''); // 送信後に入力欄をクリア\n            } catch (error) {\n                console.error(\"メッセージの送信エラー:\", error);\n            }\n        }\n    };\n\n    // チャット相手の名前を取得\n    useEffect(() => {\n        const fetchPartnerName = async () => {\n            try {\n                const partnerDoc = await getDoc(doc(db, 'users', partnerId));\n                if (partnerDoc.exists()) {\n                    setPartnerName(partnerDoc.data().name);\n                } else {\n                    setPartnerName('不明なユーザー');\n                }\n            } catch (error) {\n                console.error(\"チャット相手の名前取得エラー:\", error);\n                setPartnerName('不明なユーザー');\n            }\n        };\n        fetchPartnerName();\n    }, [partnerId]);\n\n    // メッセージをリアルタイムで取得\n    useEffect(() => {\n        const messagesQuery = query(\n            collection(db, 'Chats', chatRoomId, 'Messages'),\n            orderBy('timestamp', 'asc')\n        );\n\n        const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\n            const fetchedMessages = snapshot.docs.map(doc => doc.data());\n            setMessages(fetchedMessages);\n        });\n\n        return () => unsubscribe();\n    }, [chatRoomId]);\n\n    useEffect(() => {\n        if (roomRef.current) {\n            roomRef.current.scrollTop = roomRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    return (\n        <div>\n            <h3>{partnerName}とのチャット</h3>\n            <div\n                id=\"room\"\n                ref={roomRef}\n                style={{ height: '300px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}\n            >\n                {messages.map((msg, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            ...styles.messageBubble,\n                            backgroundColor: msg.userId === userId ? '#daf5da' : '#f0f0f0', // 自分と相手で背景色を変える\n                            alignSelf: msg.userId === userId ? 'flex-end' : 'flex-start', // 自分のメッセージは右寄せ\n                        }}\n                    >\n                        <strong>{msg.userName}:</strong> {msg.text}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"input-group chat-input\">\n                <input\n                    id=\"inputMessage\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"メッセージを入力してください\"\n                    value={message}\n                    onChange={handleInputChange}\n                    style={{ width: '200px', height: '40px' }}\n                />\n                <div className=\"input-group-append\">\n                    <button\n                        id=\"sendBtn\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        onClick={handleSendMessage}\n                        disabled={message.trim() === ''}\n                    >\n                        送信\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    messageBubble: {\n        borderRadius: '15px',\n        padding: '10px',\n        margin: '5px 0',\n        maxWidth: '300px',\n        wordWrap: 'break-word',\n    },\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}